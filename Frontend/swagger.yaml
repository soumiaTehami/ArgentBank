swagger: '2.0'
info:
  title: Bank Argent API Documentation
  description: Contains all available API endpoints for Argent Bank services.
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for user login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login successful
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid credentials
        '500':
          description: Internal server error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for user registration
      parameters:
        - in: body
          name: body
          description: Signup payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup successful
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get User Profile
      description: Retrieve user profile data
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update User Profile
      description: Update user profile data
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Profile update payload
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: Profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Fetch Transactions
      description: Retrieve all transactions for the logged-in user
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Add a Transaction
      description: Create a new transaction
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: New transaction payload
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      produces:
        - application/json
      responses:
        '201':
          description: Transaction created successfully
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

  /transaction/{id}:
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Delete a Transaction
      description: Delete a specific transaction by ID
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
        - in: path
          name: id
          description: Transaction ID
          required: true
          type: string
      responses:
        '200':
          description: Transaction deleted successfully
        '400':
          description: Invalid request
        '404':
          description: Transaction not found
        '500':
          description: Internal server error

    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update a Transaction
      description: Update the category and/or notes of a specific transaction by ID
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
        - in: path
          name: id
          description: Transaction ID
          required: true
          type: string
        - in: body
          name: body
          description: Transaction update payload (category and/or notes)
          required: true
          schema:
            type: object
            properties:
              category:
                type: string
                description: Updated transaction category
                example: "Entertainment"
              notes:
                type: string
                description: Updated notes for the transaction
                example: "Bought movie tickets"
      produces:
        - application/json
      responses:
        '200':
          description: Transaction updated successfully
        '400':
          description: Invalid fields
        '404':
          description: Transaction not found
        '500':
          description: Internal server error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    type: object
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
      firstName:
        type: string
        description: User first name
      lastName:
        type: string
        description: User last name

  Login:
    type: object
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        additionalProperties: true

  Transaction:
    type: object
    properties:
      id:
        type: string
        description: Transaction ID
      date:
        type: string
        description: Transaction date (YYYY-MM-DD)
      description:
        type: string
        description: Transaction description
      amount:
        type: number
        description: Transaction amount
      balance:
        type: number
        description: Remaining balance after the transaction
      category:
        type: string
        description: Transaction category
        example: "Food"  # Example category
      notes:
        type: string
        description: Additional notes
        example: "Paid for groceries"  # Example note
